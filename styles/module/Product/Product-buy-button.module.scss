@import "../../mixins/helpers/media";
@import "../../mixins/helpers/adaptive-value";
@import "../../extends/_text-sizes";

// BUY BUTTON
.buybtn {
    display: flex;
    position: relative;

    >* {
        min-height: 60px;
        margin-right: 8px;

        &.btnMain {
            margin-right: 0;
        }
    }

    @include media-breakpoint(md-down) {
        left: 0;
        bottom: 0;
        z-index: 3;
        width: 100vw;
        position: fixed;
        min-height: 92px;
        padding: 24px 32px;
        transition: .3s ease transform;
        background-color: var(--t-background);

        >div {
            height: auto;
        }
    }

    @include media-breakpoint(sm-down) {
        padding: 16px;
    }
}

.buybtnChildren {
    @include media-breakpoint(md-down) {
        margin-right: 32px;
        white-space: nowrap;
    }
}

.btnWrapper {
    width: 100%;
    margin-right: 0;
    position: relative;
}

.btnMain {
    left: 0;
    right: 0;
    height: 100%;
    position: absolute;
    transform-origin: left;
    transition: .5s cubic-bezier(.9,0,.5,1);
    transition-delay: .1s;

    &[data-open="true"] {
        transform: scaleX(0);
        transition-delay: 0s;
    }

    @include media-breakpoint(md) {
        min-height: 65px;
    }
}

.buyOpen {
    left: 0;
    right: 0;
    height: 100%;
    display: flex;
    user-select: none;
    position: absolute;
    transform: scaleX(0);
    transform-origin: right;
    transition: .5s cubic-bezier(.9,0,.5,1);
    transition-delay: 0s;

    * {
        user-select: none;
        white-space: nowrap;
    }

    .toBasket {
        min-height: 60px;
        flex-basis: 100%;
    }

    &[data-open="true"] {
        transform: scaleX(1);
        transition-delay: .1s;
    }

    @include media-breakpoint(xxl-up) {
        .toBasket {
            flex-basis: 50%;
        }

        .countSelector {
            flex-basis: 50%;
        }
    }

    @include media-breakpoint(md) {
        min-height: 65px;
    }
}

.counterInput {
    width: 100%;
    border: none;
    outline: none;
    display: none;
    padding: 0 12px;
    flex-basis: 100%;
    padding-right: 0;
    text-align: center;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    -moz-appearance: textfield;
    user-select: all!important;
    background-color: var(--t-light);

    &[data-shake="true"] {
        animation: shake 1s ease;
    }

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }
}

@keyframes shake {
    0% {
        transform: translateX(-20px);
    }

    20% {
        transform: translateX(20px);
    }

    40% {
        transform: translateX(-10px);
    }

    60% {
        transform: translateX(10px);
    }

    80% {
        transform: translateX(-5px);
    }

    100% {
        transform: translateX(0);
    }
}

.counterDiv {
    width: 100%;
    display: flex;
    transition: .3s;
    overflow: hidden;
    flex-basis: 100%;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;

    &:hover {
        color: var(--t-primary);
    }

    > span {
        min-width: 13px;
        display: inline-block;
    }
}

.countSelector {
    display: flex;
    cursor: pointer;
    margin-left: 8px;
    flex-basis: 100%;
    border-radius: 8px;
    background-color: var(--t-light);

    &[data-active="false"] {
        .counterBtnAccept {
            display: none;
        }
    }

    &[data-active="true"] {

        .counterInput,
        .counterBtnAccept {
            display: flex;
        }

        .counterDiv,
        .counterBtn {
            display: none;
        }
    }
}

.counterBtn,
.counterBtnAccept {
    display: flex;
    min-width: 40px;
    align-items: center;
    transition: .3s color;
    justify-content: center;

    &:hover {
        color: var(--t-primary);
    }

    &[data-disabled="true"] {
        opacity: .3;
        pointer-events: none;
    }

    @include media-breakpoint(md-up) {
        min-width: 60px;
    }
}

.counterBtnReject {
    filter: none;
}

.favourite {
    min-width: 60px;
    min-height: 60px;

    path {
        transition: .3s;
    }

    &[data-active="false"] {
        svg {
            stroke-width: 1.5px;
            stroke: currentColor;
        }

        path {
            fill: none;
        }
    }

    &[data-active="true"] {
        path {
            stroke-width: 1.5px;
            fill: var(--t-primary);
            stroke: var(--t-primary);
        }
    }

    @include media-breakpoint(md) {
        min-width: 73px;
    }

    @include media-breakpoint(sm-down) {
        min-width: 60px;
    }
}