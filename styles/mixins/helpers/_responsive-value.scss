@import "../lib/strip-unit";

/**
 * Creates a property which will change proportionally to the viewport width
 * between given values
 *
 * @param {Number} $min-vw - Viewport size from which to start proportional size, either a value
 * @param {Number} $max-vw - Viewport size to which to proportionally size, either a value
 * @param {Number} $min-value - CSS property value on min size
 * @param {Number} $max-value - CSS property value on max size

 * @demo
 *     font-size: responsive-value(xs, xxl, 12px, 16px);
 */

@function responsive-value($media-from, $media-to, $min-value, $max-value) {
    $min-vw: map-get($responsive-design-breakpoints, $media-from);
    $max-vw: map-get($responsive-design-breakpoints, $media-to);

    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-value);
    $u4: unit($max-value);

    @if $min-vw == $max-vw {
        @error 'responsive-value(#{ $media-from }, #{ $media-to }, #{ $min-value }, #{ $max-value }) min and max viewport size is the same';
    }

    @if $u3 != $u4 {
        @if $min-value == 0 {
            $min-value: $max-value * 0;
            $u3: $u4;
        }
        @if $max-value == 0 {
            $max-value: $min-value * 0;
            $u4: $u3;
        }
    }

    @if $u1 == $u2 and $u3 == $u4 {
        @if $min-value == $max-value {
            @return $min-value;
        } @else {
            // Value different must be in px units
            $value-diff: $max-value - $min-value;

            @if $u3 == 'rem' or $u3 == 'em' {
                $value-diff: $value-diff * 10;
            }

            @return calc(#{$min-value} + #{strip-unit($value-diff)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
    } @else {
        @error 'responsive-value(#{ $media-from }, #{ $media-to }, #{ $min-value }, #{ $max-value }) incompatible property values';
    }
}
